buildscript {
  ext {
    kotlinVersion = '1.2.41'
    springBootVersion = '2.0.1.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'siosio'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenCentral()
  maven {
    url 'https://repo.spring.io/libs-milestone'
  }
  mavenLocal()
}

dependencies {
  // webjars
  runtime 'org.webjars:Semantic-UI:2.2.10'
  runtime 'org.webjars:jquery:3.2.1'
  runtime 'org.webjars:jquery-ui:1.12.1'

  implementation('org.flywaydb:flyway-core')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-security')

  // view
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  runtime 'org.thymeleaf.extras:thymeleaf-extras-java8time'

  // session
  compile 'org.springframework.boot:spring-boot-starter-data-redis'
  compile 'org.springframework.session:spring-session-data-redis'

  compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  runtime 'com.fasterxml.jackson.module:jackson-module-kotlin'

  implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'
  runtime 'org.postgresql:postgresql'
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.springframework.security:spring-security-test')

  testCompile 'org.assertj:assertj-core'

  runtime 'org.springframework.boot:spring-boot-starter-actuator'
  
}

test {
  jvmArgs = ['-Dspring.profiles.active=dev']
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.7'
}

idea.module.outputDir = compileJava.destinationDir

// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources
